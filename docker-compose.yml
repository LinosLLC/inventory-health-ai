version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: inventory_health_db
    environment:
      POSTGRES_DB: inventory_health_ai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - inventory_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: inventory_health_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - inventory_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: inventory_health_backend
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/inventory_health_ai
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-in-production
      - DEBUG=False
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    networks:
      - inventory_network
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: inventory_health_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - inventory_network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: inventory_health_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - inventory_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  inventory_network:
    driver: bridge 